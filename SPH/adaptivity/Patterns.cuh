#pragma once
#include <utility/include_all.h>
constantDevice value_unit<float4, void_unit_ty> without_center_1[] = {
	{ 0.0021f,0.0018f,0.0180f,1.0000f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_2[] = {
	{ 0.3954f,-0.4527f,-0.0241f,0.5f },
	{ -0.3954f,0.4526f,0.0241f,0.5f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_3[] = {
	{ 0.0763f,0.1501f,0.8335f,0.3334f },
	{ 0.6159f,-0.4135f,-0.4157f,0.3333f },
	{ -0.6921f,0.2636f,-0.4178f,0.3333f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_4[] = {
	{ 0.4163f,0.7866f,0.4178f,0.2501f },
	{ -0.8165f,0.2743f,-0.4740f,0.2501f },
	{ 0.6294f,-0.4038f,-0.6382f,0.2500f },
	{ -0.2292f,-0.6571f,0.6944f,0.2498f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_5[] = {
	{ -1.2640f,-0.8193f,-0.2811f,0.2f },
	{ 0.4222f,-0.1753f,-1.3875f,0.2f },
	{ 0.4256f,-0.7507f,0.2741f,0.2f },
	{ -0.2549f,0.3762f,0.0496f,0.2f },
	{ 1.3255f,0.8591f,0.2948f,0.2f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_6[] = {
	{ -0.4473f,0.9826f,-0.1123f,0.1668f },
	{ 0.4473f,-0.9826f,0.1123f,0.1669f },
	{ -0.5291f,-0.3419f,-0.8839f,0.1668f },
	{ 0.8355f,0.3095f,-0.6199f,0.1665f },
	{ 0.5291f,0.3419f,0.8839f,0.1668f },
	{ -0.8355f,-0.3095f,0.6199f,0.1663f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_7[] = {
	{ -0.2480f,-1.2027f,0.3556f,0.0932f },
	{ -0.8197f,-0.1668f,-0.4227f,0.2190f },
	{ 0.1646f,0.8990f,0.2465f,0.2162f },
	{ 0.1668f,0.5897f,-1.1808f,0.0784f },
	{ -0.8421f,0.1786f,0.9580f,0.0898f },
	{ 0.7408f,-0.1344f,1.0383f,0.0923f },
	{ 0.7620f,-0.4709f,-0.3551f,0.2111f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_8[] = {
	{ -0.2480f,-1.2027f,0.3556f,0.0932f },
	{ -0.8197f,-0.1668f,-0.4227f,0.2190f },
	{ 0.1646f,0.8990f,0.2465f,0.2162f },
	{ 0.1668f,0.5897f,-1.1808f,0.0784f },
	{ -0.8421f,0.1786f,0.9580f,0.0898f },
	{ 0.7408f,-0.1344f,1.0383f,0.0923f },
	{ 0.7620f,-0.4709f,-0.3551f,0.2111f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_9[] = {
	{ 0.6982f,0.4706f,-0.5364f,0.1619f },
	{ 0.0807f,-0.0137f,0.9956f,0.1636f },
	{ -0.5395f,0.8024f,-0.7778f,0.0862f },
	{ 0.4299f,-0.7486f,-0.8653f,0.0873f },
	{ -0.0957f,-1.1813f,0.4033f,0.0875f },
	{ 0.1462f,1.1630f,0.4267f,0.0841f },
	{ 1.1364f,-0.4160f,0.3267f,0.0831f },
	{ -1.0719f,0.3631f,0.5094f,0.0884f },
	{ -0.7753f,-0.4536f,-0.4773f,0.1578f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_10[] = {
	{ -0.4701f,-0.3797f,-0.9818f,0.0881f },
	{ -0.0219f,0.7870f,-0.8433f,0.0900f },
	{ 0.2053f,-1.1155f,-0.2180f,0.0986f },
	{ -0.2297f,0.9831f,0.5628f,0.1096f },
	{ -0.8646f,-0.7044f,0.3025f,0.1076f },
	{ 0.7864f,-0.1780f,-0.8248f,0.0875f },
	{ 0.9440f,-0.4146f,0.5223f,0.1062f },
	{ -0.1138f,-0.1288f,1.1423f,0.1165f },
	{ 0.8847f,0.7421f,0.0288f,0.0980f },
	{ -1.0511f,0.4285f,-0.2136f,0.0979f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_11[] = {
	{ 0.2281f,-0.3106f,-1.0855f,0.0710f },
	{ 0.7689f,-0.3120f,0.7989f,0.0666f },
	{ 0.5093f,-1.0266f,-0.1422f,0.1114f },
	{ -0.3453f,-0.8275f,0.7235f,0.0725f },
	{ 0.6547f,0.8429f,0.4507f,0.1037f },
	{ 0.2728f,0.8898f,-0.6934f,0.1159f },
	{ 1.1039f,0.0330f,-0.3290f,0.0680f },
	{ -1.1125f,0.0346f,0.3269f,0.1167f },
	{ -0.7795f,0.3077f,-0.8007f,0.1111f },
	{ -0.2231f,0.3197f,1.0915f,0.1084f },
	{ -0.6470f,-0.8418f,-0.4450f,0.0547f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_12[] = {
	{ 0.1007f,0.1444f,-1.1571f,0.0827f },
	{ -0.0996f,-0.1457f,1.1576f,0.0844f },
	{ 0.1126f,-0.9715f,-0.6427f,0.0827f },
	{ -0.6269f,0.8661f,-0.4773f,0.0843f },
	{ -0.9265f,-0.3149f,-0.6427f,0.0843f },
	{ 0.6277f,-0.8702f,0.4686f,0.0825f },
	{ -0.5948f,-0.9410f,0.3618f,0.0840f },
	{ -0.1122f,0.9719f,0.6434f,0.0841f },
	{ 0.5951f,0.9413f,-0.3621f,0.0827f },
	{ 1.0579f,-0.1940f,-0.4639f,0.0847f },
	{ 0.9237f,0.3092f,0.6501f,0.0826f },
	{ -1.0550f,0.2025f,0.4657f,0.0810f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_13[] = {
	{ 0.5486f,-0.1898f,-1.0229f,0.0746f },
	{ 1.1582f,0.1564f,-0.1546f,0.0826f },
	{ -0.7095f,-0.9162f,-0.2100f,0.0800f },
	{ 0.8210f,-0.5974f,0.5957f,0.0768f },
	{ -1.0836f,-0.0774f,0.4551f,0.0783f },
	{ -0.5660f,-0.1633f,-1.0203f,0.0804f },
	{ 0.1943f,0.1346f,1.1550f,0.0806f },
	{ -0.2495f,-0.8236f,0.8004f,0.0653f },
	{ -0.4770f,0.8618f,0.6443f,0.0742f },
	{ 0.1915f,0.8506f,-0.7909f,0.0708f },
	{ 0.5614f,1.0040f,0.2614f,0.0845f },
	{ -0.8539f,0.7105f,-0.3921f,0.0771f },
	{ 0.3961f,-1.0590f,-0.3329f,0.0748f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_14[] = {
	{ 0.6568f,0.6331f,0.7549f,0.0706f },
	{ -1.1341f,-0.2368f,-0.2440f,0.0696f },
	{ -0.7062f,0.6940f,-0.6536f,0.0763f },
	{ -0.6766f,-0.7642f,0.6000f,0.0694f },
	{ 0.0064f,-1.1747f,-0.1495f,0.0707f },
	{ -0.2307f,1.1380f,0.2384f,0.0742f },
	{ -0.3810f,-0.5602f,-0.9704f,0.0667f },
	{ 1.1842f,-0.0067f,0.0406f,0.0713f },
	{ 0.6945f,0.9099f,-0.3028f,0.0674f },
	{ -0.9238f,0.3861f,0.6323f,0.0709f },
	{ 0.6320f,-0.7462f,0.6725f,0.0804f },
	{ 0.7018f,-0.5846f,-0.7539f,0.0692f },
	{ 0.2319f,0.3365f,-1.1116f,0.0730f },
	{ -0.0827f,-0.0521f,1.1820f,0.0701f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_15[] = {
	{ -0.9282f,-0.2483f,-0.7184f,0.0682f },
	{ 0.4599f,0.2064f,1.0879f,0.0669f },
	{ 0.1024f,0.9796f,-0.6855f,0.0735f },
	{ 0.1033f,0.0078f,-1.1937f,0.0683f },
	{ -0.4830f,0.6649f,0.8725f,0.0650f },
	{ -0.8816f,0.7706f,-0.2708f,0.0743f },
	{ -1.1254f,-0.0474f,0.4010f,0.0598f },
	{ -0.6729f,-0.9789f,0.1410f,0.0605f },
	{ -0.0610f,-0.9443f,-0.7346f,0.0652f },
	{ 0.3442f,-1.0514f,0.4635f,0.0691f },
	{ 0.3830f,1.0713f,0.3797f,0.0704f },
	{ -0.3573f,-0.4814f,1.0354f,0.0602f },
	{ 1.0972f,-0.2934f,0.3872f,0.0713f },
	{ 0.8923f,-0.4668f,-0.6491f,0.0664f },
	{ 1.0229f,0.5442f,-0.3063f,0.0609f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_16[] = {
	{ -0.8792f,0.3056f,-0.7428f,0.0553f },
	{ 0.1140f,0.5836f,-1.0334f,0.0573f },
	{ -1.1078f,0.3529f,0.2620f,0.0590f },
	{ 1.1859f,0.1456f,0.0003f,0.0695f },
	{ -0.7866f,-0.5022f,0.7436f,0.0610f },
	{ 0.6208f,0.9935f,-0.2279f,0.0595f },
	{ 0.7791f,-0.2320f,-0.8728f,0.0583f },
	{ -0.0814f,-1.1286f,-0.3789f,0.0626f },
	{ 0.6726f,0.6453f,0.7479f,0.0698f },
	{ -0.3513f,0.8634f,0.7449f,0.0589f },
	{ -0.4107f,1.0890f,-0.2614f,0.0581f },
	{ 0.8540f,-0.8344f,-0.0320f,0.0702f },
	{ -0.9838f,-0.6180f,-0.2741f,0.0621f },
	{ -0.0031f,0.0003f,1.1945f,0.0698f },
	{ -0.2145f,-0.3957f,-1.1030f,0.0583f },
	{ 0.1477f,-0.9463f,0.7175f,0.0703f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_17[] = {
	{ -0.0090f,1.1661f,0.2757f,0.0582f },
	{ -0.6195f,0.9024f,-0.4890f,0.0597f },
	{ -0.5980f,-0.2082f,1.0173f,0.0574f },
	{ 0.5695f,-0.4043f,-0.9746f,0.0632f },
	{ -0.0324f,0.3857f,-1.1326f,0.0561f },
	{ 0.8739f,0.7042f,0.4129f,0.0515f },
	{ -0.8828f,-0.0445f,-0.8093f,0.0588f },
	{ 0.2408f,0.3659f,1.1170f,0.0600f },
	{ -1.1716f,-0.1994f,0.1421f,0.0580f },
	{ 0.9786f,-0.2735f,0.6336f,0.0579f },
	{ 0.1767f,-0.8567f,0.8194f,0.0624f },
	{ -0.8399f,0.6629f,0.5423f,0.0618f },
	{ 1.1571f,0.0577f,-0.3018f,0.0568f },
	{ 0.5890f,0.8975f,-0.5309f,0.0555f },
	{ -0.3013f,-0.8717f,-0.7660f,0.0637f },
	{ -0.5923f,-1.0228f,0.1884f,0.0609f },
	{ 0.6444f,-1.0057f,-0.1127f,0.0581f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_18[] = {
	{ -1.1803f,0.1095f,-0.1752f,0.0501f },
	{ 1.1906f,0.0849f,-0.1235f,0.0529f },
	{ -0.8931f,-0.7924f,0.1281f,0.0535f },
	{ 0.0272f,0.0145f,-1.2009f,0.0584f },
	{ -0.0151f,-1.1137f,-0.4466f,0.0574f },
	{ -0.9053f,0.0246f,0.7889f,0.0535f },
	{ 0.8851f,-0.0930f,0.8073f,0.0580f },
	{ 0.6701f,0.6377f,-0.7683f,0.0572f },
	{ -0.0907f,0.6964f,0.9759f,0.0560f },
	{ -0.6026f,0.6932f,-0.7758f,0.0577f },
	{ -0.7284f,-0.5012f,-0.8135f,0.0553f },
	{ -0.7591f,0.8910f,0.2670f,0.0531f },
	{ -0.0384f,-1.0622f,0.5613f,0.0616f },
	{ 0.7601f,0.8235f,0.4353f,0.0557f },
	{ 0.0729f,1.1851f,-0.1907f,0.0579f },
	{ -0.0221f,-0.2765f,1.1705f,0.0607f },
	{ 0.7473f,-0.5252f,-0.7803f,0.0578f },
	{ 0.8413f,-0.8416f,0.1562f,0.0432f },
};

constantDevice value_unit<float4, void_unit_ty> without_center_19[] = {
	{ -0.0004f,0.0324f,-1.2010f,0.0468f },
	{ -1.0120f,0.0365f,0.6504f,0.0519f },
	{ -0.7004f,0.5565f,-0.8045f,0.0497f },
	{ 0.6859f,-0.3391f,0.9277f,0.0488f },
	{ 0.6305f,-0.5973f,-0.8332f,0.0523f },
	{ -0.2458f,-0.2600f,1.1497f,0.0523f },
	{ 0.0728f,1.1932f,0.1641f,0.0607f },
	{ -0.5810f,-0.6398f,-0.8366f,0.0509f },
	{ -0.3104f,0.6958f,0.9310f,0.0480f },
	{ -0.8457f,0.8462f,0.1216f,0.0483f },
	{ 0.0387f,-1.0206f,0.6332f,0.0516f },
	{ 0.9418f,0.3043f,-0.6915f,0.0649f },
	{ 1.1877f,0.0490f,0.2047f,0.0620f },
	{ -1.1615f,-0.1080f,-0.2872f,0.0504f },
	{ -0.7847f,-0.9035f,0.1271f,0.0554f },
	{ 0.1946f,0.9080f,-0.7701f,0.0598f },
	{ 0.0419f,-1.1560f,-0.3179f,0.0504f },
	{ 0.6584f,0.6689f,0.7587f,0.0607f },
	{ 0.8414f,-0.8464f,0.1170f,0.0351f },
};

constantDevice value_unit<float4, void_unit_ty> with_center_1[] = {
	{ 0.f,0.f,0.f,1.0000f },
};
constantDevice value_unit<float4, void_unit_ty> with_center_2[] = {
	{ 0.0423f,0.0077f,0.1088f,0.1259f },
	{ 0.f,0.f,0.f,0.8741f },
};
constantDevice value_unit<float4, void_unit_ty> with_center_3[] = {
	{ -0.0545f,0.2221f,-1.0909f,0.0903f },
	{ 0.0544f,-0.2218f,1.0892f,0.0903f },
	{ 0.f,0.f,0.f,0.8193f },
};
constantDevice value_unit<float4, void_unit_ty> with_center_4[] = {
	{ -0.1860f,0.6109f,0.6970f,0.250f },
	{ -0.0802f,0.2761f,-0.9116f,0.250f },
	{ 0.2682f,-0.8897f,0.2059f,0.250f },
	{ 0.f,0.f,0.f,0.250f },
};
constantDevice value_unit<float4, void_unit_ty> with_center_5[] = {
	{ 0.0005f,-0.9681f,-0.4232f,0.2f },
	{ 0.8094f,0.0914f,0.6690f,0.2f },
	{ -0.9045f,0.1563f,0.5191f,0.2f },
	{ 0.0942f,0.7180f,-0.7655f,0.2f },
	{ 0.f,0.f,0.f,0.2f }
};
constantDevice value_unit<float4, void_unit_ty> with_center_6[] = {
	{ -0.1387f,-1.0836f,0.1687f,0.166667f },
	{ 1.0166f,-0.2195f,-0.5737f,0.166666f },
	{ 0.6089f,0.7216f,0.8029f,0.166666f },
	{ -0.2776f,0.8195f,-0.8054f,0.166666f },
	{ -1.0167f,0.2195f,0.5738f,0.166666f },
	{ 0.f,0.f,0.f,0.166666f },
};
constantDevice value_unit<float4, void_unit_ty> with_center_7[] = {
	{ -0.8528f,-0.1602f,0.7751f,0.1561f },
	{ 0.7877f,-0.0570f,0.8548f,0.1562f },
	{ 0.8529f,0.1602f,-0.7753f,0.1559f },
	{ -0.7875f,0.0570f,-0.8546f,0.1557f },
	{ 0.0797f,-1.1516f,-0.1503f,0.1589f },
	{ -0.0797f,1.1515f,0.1503f,0.1575f },
	{ 0.f,0.f,0.f,0.0598f },
};
constantDevice value_unit<float4, void_unit_ty> with_center_8[] = {
	{ 0.1257f,0.9886f,0.6391f,0.1142f },
	{ -0.9982f,0.5899f,-0.2517f,0.1443f },
	{ 0.8262f,-0.3147f,0.7880f,0.1156f },
	{ -0.1364f,-0.2204f,-1.1533f,0.1492f },
	{ -0.6717f,-0.2288f,0.9480f,0.1154f },
	{ -0.0704f,-1.1850f,-0.0224f,0.1460f },
	{ 0.9835f,0.4754f,-0.4642f,0.1444f },
	{ 0.f,0.f,0.f,0.0709f },
};
constantDevice value_unit<float4, void_unit_ty> with_center_9[] = {
	{ -0.6658f,-0.3151f,0.9066f,0.1203f },
	{ 1.0196f,0.5283f,0.2135f,0.1202f },
	{ 0.7420f,-0.4399f,-0.7873f,0.1225f },
	{ 0.6345f,-0.7867f,0.5855f,0.1204f },
	{ 0.0952f,0.8227f,-0.8224f,0.1222f },
	{ -0.2806f,0.9999f,0.5347f,0.1199f },
	{ -0.4492f,-1.0362f,-0.2970f,0.1211f },
	{ -1.0961f,0.2268f,-0.3330f,0.1209f },
	{ 0.f,0.f,0.f,0.0324f },
};
constantDevice value_unit<float4, void_unit_ty> with_center_10[] = {
	{ 0.0294f,-0.7233f,-0.9856f,0.0970f },
	{ -0.7490f,-0.9466f,0.2042f,0.0982f },
	{ 0.6929f,0.8127f,0.5989f,0.0968f },
	{ 1.0967f,0.0872f,-0.5433f,0.1115f },
	{ 0.0596f,1.0413f,-0.6413f,0.0977f },
	{ -0.0353f,-0.2352f,1.2042f,0.1124f },
	{ -0.7199f,0.8205f,0.5552f,0.0976f },
	{ -1.0311f,0.1444f,-0.6477f,0.1116f },
	{ 0.6608f,-1.0009f,0.2435f,0.0977f },
	{ 0.f,0.f,0.f,0.0797f },
};
constantDevice value_unit<float4, void_unit_ty> with_center_11[] = {
	{ -0.9755f,0.0273f,0.7640f,0.0816f },
	{ -0.3298f,1.1638f,0.2856f,0.0922f },
	{ -1.0473f,0.3768f,-0.5495f,0.0889f },
	{ -0.0129f,-0.9354f,0.8159f,0.0859f },
	{ 0.2899f,0.3368f,1.1602f,0.0900f },
	{ 0.0013f,-0.1347f,-1.2356f,0.0939f },
	{ 1.2217f,-0.0182f,0.2431f,0.1025f },
	{ 0.5789f,-1.0241f,-0.3961f,0.0893f },
	{ -0.7671f,-0.9241f,-0.3069f,0.0822f },
	{ 0.6506f,0.8738f,-0.6048f,0.1057f },
	{ 0.f,0.f,0.f,0.0878f },
};
constantDevice value_unit<float4, void_unit_ty> with_center_12[] = {
	{ -0.4834f,0.3321f,-1.1156f,0.0907f },
	{ 0.4630f,-0.2365f,1.1472f,0.0705f },
	{ 1.1104f,0.5229f,0.2895f,0.0891f },
	{ -1.0692f,-0.5763f,-0.3390f,0.0751f },
	{ 0.0974f,-0.8465f,-0.9272f,0.0711f },
	{ 1.0209f,-0.7392f,-0.0171f,0.0717f },
	{ -0.1675f,-1.1757f,0.4409f,0.0841f },
	{ 0.0076f,0.9577f,0.8214f,0.0938f },
	{ 0.8012f,0.2488f,-0.9423f,0.0932f },
	{ -0.8366f,-0.1214f,0.9350f,0.0722f },
	{ -0.9797f,0.7955f,-0.0082f,0.0946f },
	{ 0.f,0.f,0.f,0.0938f },
};
constantDevice value_unit<float4, void_unit_ty> with_center_13[] = {
	{ 0.9706f,-0.6154f,-0.4918f,0.0770f },
	{ -0.8396f,-0.6860f,0.6216f,0.0770f },
	{ 0.8403f,0.6859f,-0.6216f,0.0768f },
	{ 0.2336f,1.1420f,0.4512f,0.0765f },
	{ -0.2324f,-1.1413f,-0.4504f,0.0766f },
	{ 0.4440f,-0.9631f,0.6612f,0.0766f },
	{ -0.4437f,0.9637f,-0.6610f,0.0771f },
	{ 0.0103f,-0.1229f,-1.2427f,0.0768f },
	{ -1.1066f,-0.1659f,-0.5543f,0.0765f },
	{ 1.1073f,0.1662f,0.5557f,0.0764f },
	{ -0.9697f,0.6161f,0.4918f,0.0764f },
	{ -0.0120f,0.1228f,1.2439f,0.0772f },
	{ 0.f,0.f,0.f,0.0791f },
};
constantDevice value_unit<float4, void_unit_ty> with_center_14[] = {
	{ 0.8483f,-0.7084f,-0.6020f,0.0659f },
	{ -0.0592f,-0.2160f,-1.2394f,0.0733f },
	{ -0.8957f,0.6340f,-0.6191f,0.0719f },
	{ 0.0657f,0.4068f,1.1901f,0.0702f },
	{ -1.2078f,-0.3503f,-0.0226f,0.0700f },
	{ -0.3985f,-1.0864f,-0.4965f,0.0723f },
	{ -0.5662f,-0.5883f,0.9585f,0.0690f },
	{ 0.2175f,1.2072f,0.2951f,0.0751f },
	{ 1.1585f,0.4179f,-0.2716f,0.0742f },
	{ 0.2399f,0.8788f,-0.8695f,0.0696f },
	{ 0.3573f,-1.1285f,0.4240f,0.0672f },
	{ -0.9161f,0.6459f,0.5677f,0.0616f },
	{ 1.0015f,-0.1778f,0.7465f,0.0768f },
	{ 0.f,0.f,0.f,0.0829f },
};
constantDevice value_unit<float4, void_unit_ty> with_center_15[] = {
	{ 1.1078f,0.5851f,0.1773f,0.0758f },
	{ 1.1379f,-0.5297f,-0.1437f,0.0715f },
	{ -1.2446f,0.1794f,0.0105f,0.0601f },
	{ -0.6602f,-0.0170f,1.0703f,0.0580f },
	{ 0.5175f,0.3748f,-1.0876f,0.0679f },
	{ -0.5751f,1.0006f,0.5063f,0.0621f },
	{ 0.3602f,-0.5855f,1.0602f,0.0705f },
	{ 0.3607f,0.5733f,1.0642f,0.0647f },
	{ 0.3348f,-0.7598f,-0.9489f,0.0649f },
	{ -0.8068f,-0.5288f,-0.8130f,0.0668f },
	{ -0.6296f,0.6408f,-0.8855f,0.0659f },
	{ -0.8481f,-0.8809f,0.3059f,0.0637f },
	{ 0.2500f,-1.2304f,0.1046f,0.0641f },
	{ 0.2382f,1.1997f,-0.3085f,0.0649f },
	{ 0.f,0.f,0.f,0.0791f },
};
constantDevice value_unit<float4, void_unit_ty> with_center_16[] = {
	{ -0.4795f,1.1287f,-0.3120f,0.0660f },
	{ 1.1404f,0.4424f,0.3081f,0.0569f },
	{ -0.5346f,-0.8108f,-0.8044f,0.0565f },
	{ -0.8828f,0.6421f,0.6409f,0.0656f },
	{ -0.2862f,-1.1814f,0.3342f,0.0577f },
	{ 0.2405f,1.0950f,0.5788f,0.0568f },
	{ 1.0561f,-0.0824f,-0.6896f,0.0622f },
	{ 0.4702f,0.1366f,1.1662f,0.0638f },
	{ 0.6138f,0.9528f,-0.5571f,0.0596f },
	{ -1.1613f,-0.4684f,0.1429f,0.0568f },
	{ 0.5169f,-1.0523f,-0.4701f,0.0604f },
	{ -1.0016f,0.2170f,-0.7416f,0.0653f },
	{ 0.8152f,-0.7725f,0.5853f,0.0677f },
	{ -0.5456f,-0.3564f,1.0840f,0.0641f },
	{ 0.0840f,0.0185f,-1.2615f,0.0665f },
	{ 0.f,0.f,0.f,0.0743f },
};
template <uint32_t ptcl_count> hostDeviceInline value_unit<float4, void_unit_ty> get_position(uint32_t idx);
template <uint32_t ptcl_count> hostDeviceInline value_unit<float4, void_unit_ty> get_position_without(uint32_t idx);

#define POSITIONS(x)                                                                               \
  template <> hostDeviceInline value_unit<float4, void_unit_ty> get_position_without<x>(uint32_t idx) {    \
    auto pos = without_center_##x[idx];                                                            \
    return pos;                                                                                    \
  }                                                                                                \
  template <> hostDeviceInline value_unit<float4, void_unit_ty> get_position<x>(uint32_t idx) {            \
    auto pos = without_center_##x[idx];                                                            \
    if (x > 5)                                                                                     \
      pos = with_center_##x[idx];                                                                  \
    return pos;                                                                                    \
  }

/** Create functions based on the splitting patterns defined in this file so one can simply call
 * get_position<j>(i) to get the ith particle from the pattern j (from 1 to 16 particle patterns)**/
POSITIONS(1);
POSITIONS(2);
POSITIONS(3);
POSITIONS(4);
POSITIONS(5);
POSITIONS(6);
POSITIONS(7);
POSITIONS(8);
POSITIONS(9);
POSITIONS(10);
POSITIONS(11);
POSITIONS(12);
POSITIONS(13);
POSITIONS(14);
POSITIONS(15);
POSITIONS(16);
